/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  StudentClassEnrollment as PrismaStudentClassEnrollment,
} from "@prisma/client";

export class StudentClassEnrollmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.StudentClassEnrollmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.studentClassEnrollment.count(args);
  }

  async studentClassEnrollments(
    args: Prisma.StudentClassEnrollmentFindManyArgs
  ): Promise<PrismaStudentClassEnrollment[]> {
    return this.prisma.studentClassEnrollment.findMany(args);
  }
  async studentClassEnrollment(
    args: Prisma.StudentClassEnrollmentFindUniqueArgs
  ): Promise<PrismaStudentClassEnrollment | null> {
    return this.prisma.studentClassEnrollment.findUnique(args);
  }
  async createStudentClassEnrollment(
    args: Prisma.StudentClassEnrollmentCreateArgs
  ): Promise<PrismaStudentClassEnrollment> {
    return this.prisma.studentClassEnrollment.create(args);
  }
  async updateStudentClassEnrollment(
    args: Prisma.StudentClassEnrollmentUpdateArgs
  ): Promise<PrismaStudentClassEnrollment> {
    return this.prisma.studentClassEnrollment.update(args);
  }
  async deleteStudentClassEnrollment(
    args: Prisma.StudentClassEnrollmentDeleteArgs
  ): Promise<PrismaStudentClassEnrollment> {
    return this.prisma.studentClassEnrollment.delete(args);
  }
}
